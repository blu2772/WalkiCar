events {
  worker_connections 1024;
}

http {
  upstream api {
    server api:3000;
  }

  upstream turn {
    server turn:3478;
  }

  server {
    listen 80;
    server_name localhost;

    # API routes
    location /api/ {
      proxy_pass http://api;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
    }

    # WebSocket for signaling
    location /voice/ {
      proxy_pass http://api;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check
    location /health {
      proxy_pass http://api;
    }
  }

  # HTTPS configuration (uncomment and configure SSL certificates)
  # server {
  #   listen 443 ssl;
  #   server_name localhost;
  #
  #   ssl_certificate /etc/nginx/ssl/cert.pem;
  #   ssl_certificate_key /etc/nginx/ssl/key.pem;
  #
  #   location /api/ {
  #     proxy_pass http://api;
  #     proxy_http_version 1.1;
  #     proxy_set_header Upgrade $http_upgrade;
  #     proxy_set_header Connection 'upgrade';
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #     proxy_cache_bypass $http_upgrade;
  #   }
  # }
}
